
<launch>
<!--rosrun dynamic_reconfigure dynparam set camera/decimation 'filter_magnitude' 5 -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
    <param name="target_frame_name" type="string" value="/map" />
    <param name="source_frame_name" type="string" value="/base_link" />
    <param name="trajectory_update_rate" type="double" value="10" />
    <param name="trajectory_publish_rate" type="double" value="1" />
  </node>
   <!-- sync rgb/depth images per camera -->
   <group ns="camera">
    <node pkg="nodelet" type="nodelet" name="nodelet_manager1" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="rgbd_sync1" args="load rtabmap_ros/rgbd_sync nodelet_manager1">
      <remap from="rgb/image"       to="color/image_raw"/>
      <remap from="depth/image"     to="aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="color/camera_info"/>
      <param name="approx"          value="false"/>
    </node>
   </group>
   <group ns="cameraUP">
    <node pkg="nodelet" type="nodelet" name="nodelet_manager2" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="rgbd_sync2" args="load rtabmap_ros/rgbd_sync nodelet_manager2">
      <remap from="rgb/image"       to="color/image_raw"/>
      <remap from="depth/image"     to="aligned_depth_to_color/image_raw"/>
      <remap from="rgb/camera_info" to="color/camera_info"/>
      <param name="approx"          value="false"/>
    </node>
   </group>


   <!--node pkg="tf" type="static_transform_publisher" name="base_footprint_to_cam3"
  args="0.17 -0.05 0.65 -0.6 0.0 0.0 /base_footprint /camera3_link 40" /--><!--look frount-->

    <!--node pkg="tf" type="static_transform_publisher" name="base_footprint_to_cam"
  args="0.17 0.05 0.65 0.6 0.0 0.0 /base_footprint /camera_link 40" /--><!---1.57-->


  <!-- Arguments for launch file with defaults provided -->
  <arg name="cfg"                     default="false" /> <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
  <arg name="gui_cfg"                 default="~/.ros/rtabmap_gui.ini" />
  <arg name="rviz_cfg"                default="/home/leo/20230206.rviz" />
  <!-- <arg name="database_path"     default="/home/hunter/visual_cloud/ackerman/2023-12-04/outdoor_demo.db"/> -->
  <!-- <arg name="database_path"     default="/home/hunter/visual_cloud/ackerman/2023-10-30/gallery.db"/> -->
  <!-- <arg name="database_path"     default="/home/hunter/visual_cloud/ackerman/2024-01-24/gallery-left.db"/> -->
  <arg name="database_path"     default="/home/hunter/visual_cloud/ackerman/2024-02-01/square2.db"/>
  <!-- <arg name="database_path"     default="/home/hunter/visual_cloud/2023-9-22/test2.db"/> -->
  <arg name="rgb_topic"         default="/camera/color/image_raw"/>
  <arg name="depth_topic"       default="/camera/aligned_depth_to_color/image_raw"/>
  <arg name="camera_info_topic" default="/camera/color/camera_info"/>  
  <arg name="scan_topic"        default="/scan"/>
  <arg name="odom_topic"        default="/wheel_odom"/>  

  <arg name="gdb"                     default="false"/>         <!-- Launch nodes in gdb for debugging (apt install xterm gdb) -->
  <arg     if="$(arg gdb)" name="launch_prefix" default="xterm -e gdb -q -ex run --args"/>
  <arg unless="$(arg gdb)" name="launch_prefix" default=""/>
  <arg name="output"                  default="screen"/>        <!-- Control node output (screen or log) -->

  <arg name="add_visual_odom"            default="false"/>
  <arg name="use_2_cam"                  default="true"/>
  <arg name="rtabmapviz"                 default="false" />
  <!--arg name="vo_frame_id"                default="wheel_odom"/--> 

  <arg name="localization"            default="true"/>   <!-- 設定模式：false->建圖  true->已經有地圖了，要來定位-->
  <arg     if="$(arg localization)"   name="lode_map"     default=""/>
  <arg unless="$(arg localization)"   name="lode_map"     default=""/><!-- delete_db_on_start -->
  
<node if="$(arg add_visual_odom)" pkg="rtabmap_ros" type="rgbd_odometry" name="rgbd_odometry" output="screen">
      <param      name="rgbd_cameras"       type="int"    value="2"/>
      <remap      from="rgbd_image0"        to="/camera/rgbd_image"/>
      <remap      from="rgbd_image1"        to="/cameraUP/rgbd_image"/>
      
      <!-- <param unless="$(arg use_2_cam)" name="rgbd_cameras"       type="int"    value="1"/> -->

      <param name="subscribe_rgbd"           type="bool"   value="true"/>
      <param name="frame_id"                 type="string" value="base_link"/><!--base_footprint-->
      <param name="odom_frame_id"            type="string" value="wheel_odom"/><!--wheel_odom-->

      <param name="Vis/CorGuessWinSize"      type="int"  value="0"/>
      <param name="publish_tf"               type="bool" value="false"/>

      <param name="Odom/Holonomic"           type="bool"   value="false"/>
      <param name="Odom/Strategy"            type="int"    value="0"/>
      <param name="Odom/AlignWithGround"     type="bool"   value="true"/><!--"初始化時將里程計與地面對齊。"-->

     </node>


  <!-- Mapping Node -->
  <group ns="rtabmap">
  <!-- Odometry Node -->
  

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg lode_map)">

      <!-- Basic RTAB-Map Parameters -->
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="frame_id"            type="string" value="base_link"/>
      <param name="odom_frame_id"       type="string" value="wheel_odom"/><!--/odom-->
      <param name="subscribe_depth"     type="bool"   value="false"/>
      <param name="subscribe_rgbd"      type="bool"   value="true"/>
      <param name="subscribe_scan"      type="bool"   value="false"/>

      <param name="rgbd_cameras"        type="int"    value="2"/>
      <param name="Vis/EstimationType"        type="int"    value="0"/>

      <param name="gen_scan"            type="bool"   value="true"/>
      <param name="gen_scan_max_depth"  type="double" value="10.0"/>

      <!-- RTAB-Map Inputs -->
      <!--remap from="scan"            to="$(arg scan_topic)"/-->
      <remap from="rgbd_image0"        to="/camera/rgbd_image"/>
      <remap from="rgbd_image1"        to="/cameraUP/rgbd_image"/>
      <!-- <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/> -->

      <!-- RTAB-Map Output -->
      <!--remap from="grid_map" to="/projected_map"/-->
      <remap from="grid_map" to="/map"/>

      <param name="Grid/3D"                            type="bool" value="true"/> 
      <param name="Grid/Sensor"                        type="string" value="0"/>
      <param name="Grid/FromDepth"                     type="bool"   value="true"/> 
      <param name="Grid/MaxObstacleHeight"             type="double" value="0.0"/>
      <param name="Grid/RangeMax"                      type="double" value="5.0"/>
      <param name="Grid/RangeMin"                      type="double" value="0.0"/>
      <param name="Grid/FootprintHeight"               type="string" value="0.5"/>  <!--"Footprint height used to filter points over the footprint of the robot. Footprint length and width should be set."-->
      <param name="Grid/FootprintLength"               type="string" value="0.3"/>  <!--"Footprint length used to filter points over the footprint of the robot."-->
      <param name="Grid/FootprintWidth"                type="string" value="0.3"/>  <!--"Footprint width used to filter points over the footprint of the robot. Footprint length should be set."-->

      <param name="GridGlobal/FootprintRadius"         type="string" value="0.01"/>
      <param name="RGBD/ProximityPathMaxNeighbors"     type="string" value="0"/>
      <param name="RGBD/NeighborLinkRefining"          type="string" value="true"/>
      <param name="RGBD/ProximityBySpace"              type="string" value="true"/>
      <param name="RGBD/AngularUpdate"                 type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate"                  type="string" value="0.01"/> <!--"Minimum linear displacement (m) to update the map. Rehearsal is done prior to this, so weights are still updated."-->
      <!--param name="Mem/GenerateIds"                    type="bool"   value="true"/-->




      <!--param name="Grid/NoiseFilteringMinNeighbors"    type="double" value="250"/-->
      <!--param name="Grid/NoiseFilteringRadius"          type="double" value="30"/-->

      <!--param name="Grid/RangeMax"                      type="double" value="10"/-->

      <!-- Rate (Hz) at which new nodes are added to map -->
      <param name="Rtabmap/DetectionRate" type="string" value="1"/> 

      <!-- 2D SLAM -->
      <param name="Reg/Force3DoF" type="bool" value="true"/>
      <param name="Optimizer/Slam2D" value="true" /> 
      
      <!--param name="cloud_noise_filtering_radius" value="0.05"/>
      <param name="cloud_noise_filtering_min_neighbors" value="2"/--> 

      <!-- Loop Closure Constraint -->
      <!-- 0=Visual, 1=ICP (1 requires scan)-->
      <param name="Reg/Strategy" type="string" value="0"/>
      <!-- <param name="Icp/Strategy" type="string" value="0"/>   -->

      <!-- Loop Closure Detection -->
      <!-- 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB 9=KAZE-->
      <param name="Kp/DetectorStrategy"      type="int" value="4"/><!--0-->
      <param name="Vis/FeatureType"          type="int" value="4"/>

      <!-- Maximum visual words per image (bag-of-words) -->
      <param name="Kp/MaxFeatures" type="double" value="300"/>  

      <!-- Used to extract more or less SURF features -->
      <!--param name="SURF/HessianThreshold" type="string" value="100"/-->
      <!-- Minimum visual inliers to accept loop closure -->
      <param name="Vis/MinInliers" type="double" value="10"/> 
      <!-- Set to false to avoid saving data when robot is not moving -->
      <param name="Mem/NotLinkedNodesKept" type="bool" value="false"/>
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="bool" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="bool" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
      <!--test add-->



    </node> 


<node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
    <param name="target_frame_name" type="string" value="map" />
    <param name="source_frame_name" type="string" value="base_link" />
    <param name="trajectory_update_rate" type="double" value="4" />
    <param name="trajectory_publish_rate" type="double" value="0.25" />
  </node>



    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(arg gui_cfg)" output="$(arg output)" launch-prefix="$(arg launch_prefix)">
      <param name="subscribe_depth"  type="bool" value="true"/>
      
      <param name="subscribe_rgbd"       type="bool"   value="true"/>
      
      <param if="$(arg add_visual_odom)" name="subscribe_odom_info" type="bool" value="true"/>

      <param name="frame_id"                 type="string" value="base_link"/><!--base_footprint-->
      <param name="odom_frame_id"            type="string" value="wheel_odom"/>

      <param name="queue_size"           type="int"    value="10"/>
      <param name="approx_sync"          type="bool"   value="true"/>
    
      <remap from="rgbd_image0"        to="/camera/rgbd_image"/>
      <remap from="rgbd_image1"        to="/cameraUP/rgbd_image"/>
      
      <remap from="odom"                   to="$(arg odom_topic)"/>
    </node>



    

  </group>
  <node pkg="rviz" type="rviz" name="rviz" args="-d /home/hunter/visual_slam.rviz"  default="$(rviz_cfg)"/>




  
  
</launch>

